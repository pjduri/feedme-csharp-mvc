@using System.Text.Json;
@using System.Text.Json.Serialization;
@using feedme_csharp_mvc.ViewModels
@model ChoiceListDetailViewModel

@*@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@

@*<div class="card">*@
    <div class="card-header bg-dark text-secondary d-flex flex-row align-items-center">
        <h2 class="offset-4">@Model.ChoiceListName</h2>
        <a class="card-link m-2 btn btn-outline-secondary btn-sm" asp-controller="ChoiceLists" asp-action="Edit" asp-route-id="@Model?.ChoiceListId">Edit</a>
        <a class="btn btn-outline-secondary btn-sm m-2 justify-content-end" asp-controller="ListOptions" asp-action="Create">Add Option</a>
    </div>
    <div class="card-body bg-secondary overflow-auto" style="height: 200px;">
        <h3 class="text-center">@Model.ChoiceListDescription</h3>       
        
        @if (Model.OptionNames != null && Model.OptionNames.Count > 0)
        {
            @foreach (string option in Model.OptionNames)
            {
                <h6 class="text-center">@option</h6>
            }
        }
    </div>
@*    <div class="card-footer">
        <a class="card-link" asp-controller="ListOptions" asp-action="Create">Add More</a>
        <a class="card-link" asp-action="Edit" asp-route-id="@Model?.ChoiceListId">Edit</a>
        <a class="card-link" asp-action="Index">Back to List</a><hr />
        <button id="randomOptionButton" class="btn btn-outline-dark shadow-lg">Pick Me Something!</button>
        <button id="clearButton" class="btn btn-outline-dark shadow-lg">Clear</button>
        <div id="randomOptionContainer"></div>
    </div>*@
@*</div>*@

@*<div>
    <h4>@Model.ChoiceListName</h4>
    <table class="table">
    <tr>
        <th>Description</th>
        <td>@Model.ChoiceListDescription</td>
    </tr>
    <tr>
        <th>Options</th>
        <td>
        @if (Model.OptionNames != null && Model.OptionNames.Count > 0) 
        {
            <ul>
            @foreach (string option in Model.OptionNames)
            {
                <li>@option</li>
            }
            </ul>
        }
        <a asp-controller="ListOptions" asp-action="Create">Add More</a>
        </td>
    </tr>
</table>
    <hr />
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ChoiceListId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<button id="randomOptionButton" class="btn btn-outline-dark shadow-lg">Pick Me Something!</button>
<button id="clearButton" class="btn btn-outline-dark shadow-lg">Clear</button>
<div id="randomOptionContainer"></div>*@

@*<script>
  const button = document.getElementById('randomOptionButton')
  const clearButton = document.getElementById('clearButton')
  const container = document.getElementById('randomOptionContainer')
  const optionsJson = '@Html.Raw(Json.Serialize(Model.OptionNames))'
  const options = JSON.parse(optionsJson)
  let randomOption
  clearButton.hidden = true

  button.addEventListener('click', () => {
    const randomIndex = Math.floor(Math.random() * options.length)
    randomOption = options[randomIndex]
    container.textContent = randomOption
    clearButton.hidden = false
  })

  clearButton.addEventListener('click', () => {
      randomOption = null
      container.textContent = randomOption
      clearButton.hidden = true
  })
</script>*@